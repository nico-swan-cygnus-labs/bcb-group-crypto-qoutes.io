{"version":3,"sources":["./src/app/components/line-chart/line-chart.component.ts","./src/app/components/line-chart/line-chart.component.html","./src/app/pages/info/Info.module.ts","./src/app/pages/info/info-routing.module.ts","./src/app/pages/info/info.component.ts","./src/app/pages/info/Info.component.html","./src/app/components/cc-signals/cc-signals.component.ts","./src/app/components/cc-signals/cc-signals.component.html"],"names":[],"mappings":"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","file":"pages-info-Info-module.js","sourcesContent":["import { Component, Input, OnInit, ViewContainerRef } from '@angular/core';\nimport { SymbolHistory } from 'app/core/interfaces/symbol-history.interface';\nimport * as shape from 'd3-shape';\n\n@Component({\n  selector: 'app-line-chart',\n  templateUrl: './line-chart.component.html',\n  styleUrls: ['./line-chart.component.scss']\n})\nexport class LineChartComponent implements OnInit {\n\n  @Input() data: SymbolHistory\n  chartData: any;\n  view: any[];\n  currency: string;\n\n  // options\n  legend: boolean = false;\n  showLabels: boolean = false;\n  animations: boolean = true;\n  xAxis: boolean = false;\n  yAxis: boolean = true;\n  showYAxisLabel: boolean = false;\n  showXAxisLabel: boolean = false;\n  xAxisLabel: string = 'Year';\n  yAxisLabel: string = 'Population';\n  timeline: boolean = true;\n  curve:any = shape.curveCardinal.tension(0);\n\n  colorScheme = {\n    domain: ['#0060f5']\n  };\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.populateChartData(this.data);\n    this.view = [innerWidth / 1.3, 400];\n  }\n\n\n  populateChartData(_data) {\n    const data = _data.value;\n    this.currency = data.currency;\n    let chartData: any = [];\n    data.data.forEach(chartPoint => {\n      let date = new Date( chartPoint.time * 1000);\n      chartData.push({\n        name: date.toDateString(),\n        value :chartPoint.value\n      });\n    });\n    \n    this.chartData = [\n      {\n        \"name\": data.currency,\n        \"series\": chartData\n      }\n    ];\n  }\n\n  onResize(event) {\n    this.view = [event.target.innerWidth / 1.35, 400];\n  }\n\n  onSelect(data): void {\n    console.log('Item clicked', JSON.parse(JSON.stringify(data)));\n  }\n\n  onActivate(data): void {\n    console.log('Activate', JSON.parse(JSON.stringify(data)));\n  }\n\n  onDeactivate(data): void {\n    console.log('Deactivate', JSON.parse(JSON.stringify(data)));\n  }\n\n}\n","<mat-card class=\"line-chart-card mat-elevation-z0\" fxFlex=\"grow\" >\n    <mat-card-content>\n        <ngx-charts-line-chart (window:resize)=\"onResize($event)\" autoScale=\"true\" [curve]=\"curve\" [view]=\"view\"\n            [scheme]=\"colorScheme\" [legend]=\"legend\" [showXAxisLabel]=\"showXAxisLabel\" [showYAxisLabel]=\"showYAxisLabel\"\n            [xAxis]=\"xAxis\" [yAxis]=\"yAxis\" [xAxisLabel]=\"xAxisLabel\" [yAxisLabel]=\"yAxisLabel\" [timeline]=\"timeline\"\n            [results]=\"chartData\" (select)=\"onSelect($event)\" (activate)=\"onActivate($event)\"\n            (deactivate)=\"onDeactivate($event)\">\n        </ngx-charts-line-chart>\n    </mat-card-content>\n</mat-card>","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { CcSignalsComponent as CcSignalsComponent } from 'app/components/cc-signals/cc-signals.component';\nimport { LineChartComponent } from 'app/components/line-chart/line-chart.component';\nimport { UiMaterialModule } from '../../ui/ui-material.module';\nimport { UiModule } from '../../ui/ui.module';\nimport { InfoRoutingModule } from './info-routing.module';\nimport { InfoComponent } from './info.component';\n\n@NgModule({\n    declarations: [InfoComponent, LineChartComponent,CcSignalsComponent],\n    imports: [\n        CommonModule, \n        UiMaterialModule, \n        InfoRoutingModule, \n        FontAwesomeModule, \n        FlexLayoutModule,\n        NgxChartsModule, \n        UiModule\n    ]\n})\nexport class InfoModule {}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { InfoComponent } from './info.component';\n\nconst routes: Routes = [{ path: '', component: InfoComponent }];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class InfoRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Store } from '@ngrx/store';\r\nimport { DataService } from 'app/core/data/data.service';\r\nimport { SymbolHistory } from 'app/core/interfaces/symbol-history.interface';\r\nimport { TradingSignal } from 'app/core/interfaces/trading-signal.interface';\r\nimport * as QuotesActions from 'app/core/store/actions/quotes.actions';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport * as fromRoot from '../../core/store';\r\n\r\n@Component({\r\n    selector: 'app-info',\r\n    templateUrl: './Info.component.html',\r\n    styleUrls: ['./Info.component.scss']\r\n})\r\nexport class InfoComponent implements OnInit {\r\n    history$: Observable<Map<string, SymbolHistory>>;\r\n    signals$: Observable<Map<string, TradingSignal>>;\r\n    symbol: string;\r\n    currency: string;\r\n\r\n\r\n    constructor(\r\n        private dataService: DataService,\r\n        private store: Store<fromRoot.State>,\r\n        private route: ActivatedRoute\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        const routeParams = this.route.snapshot.paramMap;\r\n        const props = { \r\n            symbol: routeParams.get('symbol'), \r\n            currency: routeParams.get('currency'), \r\n            length: 30 \r\n        };\r\n        this.currency = props.currency;\r\n        this.symbol = props.symbol;\r\n\r\n        this.history$ = this.store\r\n            .select(fromRoot.getDailyHistoryQuote)\r\n            .pipe(map((history: Map<string, SymbolHistory>) => history));\r\n     \r\n        this.dataService.getDailyHistoryQuote(props.symbol, props.currency, props.length)\r\n            .pipe(map((history: SymbolHistory) =>  new QuotesActions.UpdateHistoryFromAPI(history)))\r\n            .subscribe(this.store);\r\n\r\n        this.signals$ = this.store\r\n            .select(fromRoot.getTradingSignals)\r\n            .pipe(map((signals: Map<string, TradingSignal>) =>signals));\r\n\r\n        this.dataService.getTradingSignals(props.symbol)\r\n            .pipe(map((signals) => new QuotesActions.UpdateTradingSignalsFromAPI(signals) ))\r\n            .subscribe(this.store);  \r\n    }\r\n}\r\n","<div class=\"info-container\">\n  <div style=\"height: 100%; padding-top: 20px; padding-bottom: 20px;\">\n    <mat-card fxFlex=\"grow\">\n      <mat-card-header fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n        <span style=\"flex: 1 1 auto;\"></span>\n        <h2 style=\"margin: 0px;\">{{symbol}}-{{currency}}</h2>\n        <span style=\"flex: 1 1 auto;\"></span>\n        <button mat-icon-button routerLink=\"/\">\n          <mat-icon>close</mat-icon>\n        </button>\n      </mat-card-header>\n      <mat-card-content fxLayout=\"column\" fxLayoutAlign=\"space-between center\">\n        <div *ngIf=\"history$ | async as historyDataMap\">\n          <app-line-chart *ngFor=\"let historyData of historyDataMap | keyvalue\" [data]=\"historyData\"></app-line-chart>\n        </div>\n        <div *ngIf=\"signals$ | async as signalsDataMap\">\n          <app-cc-signals *ngFor=\"let signalData of signalsDataMap | keyvalue\" [data]=\"signalData.value\">\n          </app-cc-signals>\n        </div>\n      </mat-card-content>\n    </mat-card>\n  </div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Signal, TradingSignal } from 'app/core/interfaces/trading-signal.interface';\r\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\r\n\r\n@Component({\r\n  selector: 'app-cc-signals',\r\n  templateUrl: './cc-signals.component.html',\r\n  styleUrls: ['./cc-signals.component.scss']\r\n})\r\nexport class CcSignalsComponent implements OnInit {\r\n\r\n  @Input() data: TradingSignal;\r\n  overviewSignal: string;\r\n  inOutVar: string;\r\n  largetxsVar: string;\r\n  addressesNetGrowth: string;\r\n  concentrationVar: string;\r\n\r\n  inOutVarChartData: any[];\r\n  largetxsVarChartData: any[];\r\n  addressesNetGrowthChartData: any[];\r\n  concentrationVarChartData: any[];\r\n\r\n  view: any[] = [200, 150];\r\n  legend: boolean = false;\r\n  showText: boolean = false;\r\n  angleSpan: number = 180;\r\n  startAngle: number = -90;\r\n  max:number = 1;\r\n  showAxis: boolean = false;\r\n\r\n  colorScheme = {\r\n    domain: ['#0060f5']\r\n  };\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    if (this.data) {\r\n      const signals: Signal[] =  this.data.signals || undefined;\r\n      if (signals) {\r\n      signals.forEach(signal => {\r\n        switch (signal.name) {\r\n          case 'inOutVar':\r\n            this.inOutVar = signal.sentiment;\r\n            this.inOutVarChartData = [{ name: \"inOutVar\", value: signal.score }];\r\n            break;\r\n          case 'largetxsVar':\r\n            this.largetxsVar = signal.sentiment;\r\n            this.largetxsVarChartData = [{ name: \"largetxsVar\", value: signal.score }];\r\n            break;\r\n          case 'addressesNetGrowth':\r\n            this.addressesNetGrowth = signal.sentiment;\r\n            this.addressesNetGrowthChartData = [{ name: \"addressesNetGrowth\", value: signal.score }];\r\n            break;\r\n          case 'concentrationVar':\r\n            this.concentrationVar = signal.sentiment;\r\n            this.concentrationVarChartData = [{ name: \"concentrationVar\", value: signal.score }];\r\n            break;      \r\n        } \r\n      });\r\n      this.calcSentiment();\r\n    }\r\n  }\r\n  }\r\n\r\n  calcSentiment() {\r\n    var sentimentValue = function (_type: string) {\r\n       switch (_type) {\r\n         case 'neutral':\r\n           return 0;\r\n        case 'bearish':\r\n           return -1;\r\n        case 'bullish':\r\n           return 1;\r\n         default:\r\n           return 0;\r\n       }\r\n    } \r\n    const calcValue = sentimentValue(this.addressesNetGrowth) +\r\n                           sentimentValue(this.concentrationVar) + \r\n                           sentimentValue(this.inOutVar) + \r\n                           sentimentValue(this.largetxsVar);\r\n    if (calcValue > 0) {\r\n      this.overviewSignal = 'Bullish';\r\n    } else if (calcValue < 0 ) {\r\n      this.overviewSignal = 'Bearish'; \r\n    } else {\r\n      this.overviewSignal = 'Neutral';\r\n    }                                         \r\n  }\r\n\r\n}\r\n","<mat-card class=\"signals-card mat-elevation-z0\">\r\n    <mat-card-header>\r\n        <mat-card-title>Onchain Signals</mat-card-title>\r\n        <mat-card-subtitle>Sentiment is <span [class]=\"overviewSignal.toLowerCase()\">{{ overviewSignal }}</span>\r\n        </mat-card-subtitle>\r\n    </mat-card-header>\r\n    <mat-card-content fxLayout=\"column\" fxLayoutAlign=\"space-evenly stretch\">\r\n        <mat-accordion>\r\n            <mat-expansion-panel>\r\n                <mat-expansion-panel-header>\r\n                    <mat-panel-title>\r\n                        <span>In/out of the money is <span [class]=\"inOutVar\">{{inOutVar}}</span></span>\r\n                    </mat-panel-title>\r\n                </mat-expansion-panel-header>\r\n                <p>\r\n                    <ngx-charts-gauge [view]=\"view\" [scheme]=\"colorScheme\" [results]=\"inOutVarChartData\"\r\n                        [showText]=\"showText\" [legend]=\"legend\" [angleSpan]=\"angleSpan\" [startAngle]=\"startAngle\"\r\n                        [max]=\"max\" [showAxis]=\"showAxis\">\r\n                    </ngx-charts-gauge>\r\n                </p>\r\n                <p>This momentum signal calculates the net change of in/out of the money addresses, if the number of \"In\r\n                    the Money\"\r\n                    addresses is increasing this would be a bullish signal. In the money means addresses that would make\r\n                    a profit on the\r\n                    tokens they hold because they acquired the tokens at a lower price.</p>\r\n            </mat-expansion-panel>\r\n        </mat-accordion>\r\n        <mat-accordion>\r\n            <mat-expansion-panel>\r\n                <mat-expansion-panel-header>\r\n                    <mat-panel-title>\r\n                        <span>Large transactions is <span [class]=\"largetxsVar\"> {{ largetxsVar }}</span></span>\r\n                    </mat-panel-title>\r\n                </mat-expansion-panel-header>\r\n                <p>\r\n                    <ngx-charts-gauge [view]=\"view\" [scheme]=\"colorScheme\" [results]=\"largetxsVarChartData\"\r\n                        [showText]=\"showText\" [legend]=\"legend\" [angleSpan]=\"angleSpan\" [startAngle]=\"startAngle\"\r\n                        [max]=\"max\" [showAxis]=\"showAxis\">\r\n                    </ngx-charts-gauge>\r\n                </p>\r\n                <p>Momentum signal that is bullish when the short term trend of the number of txs > $100k is greater\r\n                    than the long term\r\n                    average.</p>\r\n            </mat-expansion-panel>\r\n        </mat-accordion>\r\n        <mat-accordion>\r\n            <mat-expansion-panel>\r\n                <mat-expansion-panel-header>\r\n                    <mat-panel-title>\r\n                        <span>Addresses Net Growth is <span [class]=\"addressesNetGrowth\"> {{ addressesNetGrowth\r\n                                }}</span></span>\r\n                    </mat-panel-title>\r\n                </mat-expansion-panel-header>\r\n                <p>\r\n                    <ngx-charts-gauge [view]=\"view\" [scheme]=\"colorScheme\" [results]=\"addressesNetGrowthChartData\"\r\n                        [showText]=\"showText\" [legend]=\"legend\" [angleSpan]=\"angleSpan\" [startAngle]=\"startAngle\"\r\n                        [max]=\"max\" [showAxis]=\"showAxis\">\r\n                    </ngx-charts-gauge>\r\n                </p>\r\n                <p>Momentum signal that gives an indication of the tokens underlying network health by measuring the\r\n                    amount of new\r\n                    addresses minus the addresses that have their balances emptied. It is bullish when more addresses\r\n                    are being created than\r\n                    emptied.</p>\r\n            </mat-expansion-panel>\r\n        </mat-accordion>\r\n        <mat-accordion>\r\n            <mat-expansion-panel>\r\n                <mat-expansion-panel-header>\r\n                    <mat-panel-title>\r\n                        <span>Concentration is <span [class]=\"concentrationVar\"> {{ concentrationVar }}</span></span>\r\n                    </mat-panel-title>\r\n                </mat-expansion-panel-header>\r\n                <p>\r\n                    <ngx-charts-gauge [view]=\"view\" [scheme]=\"colorScheme\" [results]=\"concentrationVarChartData\"\r\n                        [showText]=\"showText\" [legend]=\"legend\" [angleSpan]=\"angleSpan\" [startAngle]=\"startAngle\"\r\n                        [max]=\"max\" [showAxis]=\"showAxis\">\r\n                    </ngx-charts-gauge>\r\n                </p>\r\n                <p>The Concentration signal is based on the accumulation (bullish) or reduction (bearish) of addresses\r\n                    with more than 0.1%\r\n                    of the circulating supply.</p>\r\n            </mat-expansion-panel>\r\n        </mat-accordion>\r\n    </mat-card-content>\r\n</mat-card>"],"sourceRoot":"webpack:///"}